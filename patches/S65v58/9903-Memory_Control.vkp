;S65v58
;Контроль разметки ОЗУ при запуске
;Memory Control
;(c) Dimadze
;Version: 1.1
;PatchID: 9903
;Details: https://patches.kibab.com/patches/details.php5?id=9903
;!к патчу прикреплён файл, https://patches.kibab.com/cnt.php5?d=s65v58&f=Memory_Control.zip

/*

*/

/* (!)Конфликт со всеми патчами, касающиеся оперативной памяти
   Отменить предыдущую версию патча

Описание
Вот на основе всех знаний и патчей о ОЗУ на X65, решил сделать один единственный "мега"патч.
При запуске телефона происходит разметка ОЗУ, т.е. делиться на
NonPermMemory, PermMemory, JavaHeap, остальная часть нам не интересна.
Итак, патч загружает конфигурацию разметки и, если требуется, останавливает
загрузку браузера или Java-машины (или их обоих).
Настройки (1 байт) содержатся в 5304 блоке EEFULL, поэтому чтобы их изменить
потребуется специальный эльф-конфигуратор.
Функции по работе с ФС/фаилами во время работы патча не работают,
поэтому приходяться использовать EEPROM.

Кстати, данный патч выполняет и ф-ию патча CutHeap. 

Ecть 8 фиксированных режимов, т.к. возможность
свободного, а самое главное, неумелого изменения значений
памяти может привести к плохому результату,
а в частности пикоффу при запуске или невключению вовсе, вот так!

  1 - Нормальный режим
  2 - Убитие браузера
  3 - Увеличение NonPermMmem
  4 - Убитие браузера + Увеличение NonPermMmem (NonPermSize: 4 Mb)
  5 - Оптимальный режим NonPerm/JavaHeap #1 (NonPermSize: 3.5 Mb, JavaHeap: 2 Mb)
  6 - Оптимальный режим NonPerm/JavaHeap #2 (NonPermSize: 2.5 Mb, JavaHeap: 3 Mb)
  7 - Максимальный размер NonPermMem (NonPermSize: 5,64 Mb) (Java не работает!)
  8 - Максимальный размер JavaHeap   (NonPermSize: 1 Mb, JavaHeap: 4.2 Mb)

Параметр запуска настраивается специальным эльфом-конфигуратором
Возможен запуск браузера без перезагрузки.
*Указаны полные размеры памяти (а несвободные!)

*/



;PATCH_BROWSER_ENTER1
0x00B6F88C: 04D00928 00F004E8
;PATCH_BROWSER_ENTER2
0x00B6F898: C046C046 F9AD11EA
;CODE
#pragma enable old_equal_ff
0x00FDB000: F0B4154C154D00200021C94398225200
0x00FDB010: 3F23DB4301E0103C103D2E688E4209D0
0x00FDB020: 27689F42F7D19642F5D1E0680C494018
0x00FDB030: F0BC70470B4C0C4D01E0103C103D2E68
0x00FDB040: 8E4207D027689F42F7D19642F5D1E068
0x00FDB050: 06494018F0BC7047F0FF23A0F4FF23A0
0x00FDB060: 010022A0F0FF25A0F4FF25A0010024A0
0x00FDB070: 00B5FFF7C5FF02493D30086000BDC046
0x00FDB080: 0CFD76A80100000A090050E31EFF2FE1
0x00FDB090: 20B09FE508B0DBE500005BE30300000A
0x00FDB0A0: 14B09FE500402DE93BFF2FE10040BDE8
0x00FDB0B0: 0CE08EE21EFF2FE100FD76A85BDFB6A0
0x00FDB0C0: 00502DE9061F8FE224C09FE509C0DCE5
0x00FDB0D0: 00005CE30100000A18C09FE53CFF2FE1
0x00FDB0E0: 0090BDE85241505F4245415245525F31
0x00FDB0F0: 0000000000FD76A8747F82A000402DE9
0x00FDB100: A834A0E3003080E5060000EB24009FE5
0x00FDB110: 000090E5000081E518009FE5040090E5
0x00FDB120: 000082E50080BDE807402DE908209FE5
0x00FDB130: 32FF2FE1010000FA00FD76A871B0FDA0
0x00FDB140: 284AD068007828491160284951600121
0x00FDB150: 1172517200280DD001280CD002280DD0
0x00FDB160: 032810D0042815D005281DD0062825D0
0x00FDB170: 07282DD007BD00211172FBE71C491160
0x00FDB180: 1C495160F6E71A4911601A4951600021
0x00FDB190: 1172EFE7164911601749516000211172
0x00FDB1A0: 1649174A1160E5E71149116015495160
0x00FDB1B0: 002111721449124A1160DBE70C491160
0x00FDB1C0: 124951600021117251720D4A1160D1E7
0x00FDB1D0: 074911600E495160002111720D49084A
0x00FDB1E0: 1160C7E700FD76A8,0x00652000,0x002FD000
0x00FDB1F0: 0x006A2000,0x002A2AB0,0x00323160,0x001F4000
0x00FDB200: 0xA87E44F0,0x0041D160,0x002EE000,0x00100590
0x00FDB210: 0x0053EC60,0x00426800
#pragma disable old_equal_ff
;PATCH_JAVA_BEARER
0x0114EB48: 8CA1BBF0DAED C0468CF6BAEA
;PATCH_MAINENTER
0x012C50EC: 14309FE5 04F01FE5
0x012C50F0: 003080E5 FCB0FDA0

;Небольшое пояснение что означают цифры по адресу 0x00FDB1E8...
;0x00652000 //Размер памяти NonPermMem + PermMem, т.е Total Size (Стандарт)
;0x002FD000 //Размер памяти PermMem (Стандарт)
;0x006A2000 //Максимальный размер Total Size (до пикоффа)
;0x002A2AB0 //Минимальный размер PermMem (до пикоффа)
;0x00323160 //Размер PermMem при оптимальном режиме #1
;0x0041D160 //Размер PermMem при оптимальном режиме #2
;0x001F4000 //Размер JavaHeap при оптимальном режиме #1 (2 Мб)
;0x002EE000 //Размер JavaHeap при оптимальном режиме #2 (3 Мб)
;0x00100590 //Минимальный размер PermMem, при нулевом JavaHeap и убитой Java - машине (до пикоффа)
;0x0053EC60 //Максимальный размер PermMem, при NonPermMem равному 1 Мб
;0x00426800 //Максимальный размер JavaHeap, при MAX_PERMSIZE

;------------------------- end -------------------------

