;X65v100
;API
;API
;(c) 1nvisible, ~Jhellico, empeka
;(r) PatcherZ Community
;Version: 14.0
;PatchID: 1269
;Details: https://patches.kibab.com/patches/details.php5?id=1269
/*
Теперь этот патч без врезок на другие телефоны! Не ставьте врезок!!!
Патч содержит несколько функций, которые переопределяют либо расширяют стандартные функции прошивки.
В этой редакции содержится:
OpenWriteCloseFile
Return - армовская процедура возврата.
HexToInt - конвертация строки с шестнадцатеричным значением в 32-битное число.
StrAnsi2Uni, StrUni2Ansi, CharAnsi2Unicode, CharUnicode2Ansi - функции перевода строк и символов из ANSI в Unicode и обратно (с поддержкой русского языка).
DrawText - процедура для более удобного использования функций вывода текста
OpenReadCloseFile - Считывает файл в раму. Отличается от стандартного поддержкой файлов > 64 K
GetFileSize - Отдает размер файла
В v14 добавлены функции:
Seconds2iTime, CanvasDraw, DrawPicWithCanvas, DrawColorPicWithCanvas 
Также эта версия содержит Process Files для Мастер-патча v11 
English:
Patch contanins several functions that overload or expand standard FW functions.
*/
#pragma enable old_equal_ff 
;---------------------------------------- 
;OpenWriteCloseFile 
;v1.1 
;(c) 1nvisible 
;Writes Buffer to a File 
;R0 - File Name 
;R1 - Buffer Pointer 
;R2 - Bytes to Write 
0FCF000: FFB50D1C161C0849FF2201326B46F1F7 
0FCF010: 1FF8291C321C061C6B46F1F721F8301C 
0FCF020: 6946F1F721F8FFBD01030000 
;---------------------------------------- 
;ReturnProcedure 
;v1.0 
;(c) 1nvisible 
;Returns from ldr/blx patches by adding 4 to LR 
0FCF030: 0040BDE804E08EE21EFF2FE1 
;---------------------------------------- 
;Hex2Int 
;v1.0 
;(c) empeka 
;This function converts numerical string containing hexadecimal value to 32bit integer 
;Parameters: 
;R0: pointer to string 
;R1: address for pointer containing last processed byte from input string (optional) 
;Output: 
;R0: received value (32bit) 
;R1: pointer to last processed character 
;Notes: 
;Function automatically skips blanks (0x20) and new lines (0x13) in given string, so "123 4" is possible in input 
;If function encounters character, which is one of above, nor hexadecimal digit, it breaks execution. 
0FCF050: 10B5002302780130141C093C042CF9D9 
0FCF060: 202AF7D0302A15D3662A13D8392A09DD 
0FCF070: 412A0FDB462A03DD612A0BDB573A02E0 
0FCF080: 373A00E0303A1C1C102363439B180278 
0FCF090: 0130E7E7002901D001380860181C10BD 
;---------------------------------------- 
; StrAnsi2Uni 
; in: R0 = pointer to ANSI string (0-term), 
; R1 = pointer to Unicode string buffer (1st word - len) 
0FCF0A0: FFB5021C00230224D05C002805D000F0 
0FCF0B0: 17F8085301330234F6E70B80FFBD 
;---------------------------------------- 
; StrUni2Ansi 
; in: R0 = pointer to Unicode string (1st word - len), 
; R1 = pointer to ANSI string buffer 
0FCF0C0: FFB50388821C108800F03AF808700131 
0FCF0D0: 0232013B002BF6D10B70FFBD 
;---------------------------------------- 
; CharAnsi2Unicode 
; in: R0 = ANSI char 
; out: R0 = Unicode char 
0FCF0E0: 02B5A821884228DB15D0401A182803DB 
0FCF0F0: 572822DC08381DE002280ED007280ED0 
0FCF100: 0A280ED00B280ED010280ED012280ED0 
0FCF110: 17280ED011E001200CE004200AE00720 
0FCF120: 08E0062006E0562004E0512002E05420 
0FCF130: 00E0572004210902401802BD 
;---------------------------------------- 
; CharUnicode2Ansi 
; in: R0 = Unicode char 
; out: R0 = ANSI char 
0FCF140: 02B504210902884228DB401A102803DB 
0FCF150: 4F280ADC083020E001280FD004280FD0 
0FCF160: 06280FD007280FD018E051280ED05428 
0FCF170: 0ED056280ED057280ED00FE000200CE0 
0FCF180: 02200AE00A2008E0072006E0102004E0 
0FCF190: 122002E00B2000E01720A83002BD 
;---------------------------------------- 
;DrawText 
;v1.1 
;(c) 1nvisible 
;(r) benj9, KreN 
;Draws a text string. 
;R0 - wstring 
;R1 - x 
;R2 - y 
;R3 - font 
;[SP] - width 
;[SP+4] - height 
;[SP+8] - alignment
;[SP+12] - text color 
;[SP+16] - bg color 
;[SP+20] - inversion 
0FCF1B0: F0B5FFB0041C1D1C859B009304A8849B 
0FCF1C0: F1F7F2F808A804A9899A2B1C0093869B 
0FCF1D0: 0193029402ABF1F7EBF808A88799889A 
0FCF1E0: F1F7EAF808A8F1F7EFF808A8F1F7F0F8 
0FCF1F0: 7FB0F0BD 
;---------------------------------------- 
;OpenReadCloseFile 
;v1.1 
;(c) KreN
;Reads whole file to RAM. Supports >64k files. 
;R0 - File Name (0-term str) 
;R1 - RAM for ptr (4 bytes) 
0FCF200: FEB582B00D1C041C00F04AF8411C36D0 
0FCF210: 061E201C802211026B46F0F719FF0190 
0FCF220: 411C2CD0701CF0F73BFF2860051C0024 
0FCF230: 84550294029901291AD0802000020030 
0FCF240: 86420CD9211C019800226B46F0F714FF 
0FCF250: 8022120200322919A418B61A03E02919 
0FCF260: 321C0120029001986B46F0F7F5FEE1E7 
0FCF270: 01986946F0F7F8FEA01902B0FEBD0020 
0FCF280: 2860C043F9E7 
;---------------------------------------- 
;GetFileSize 
;v1.1 
;(c) KreN 
;Returns File Size. 
;R0 - File Name (0-term str) 
0FCF2A0: FEB58BB06A4601A9F1F7BAF8411C00D0 
0FCF2B0: 02980BB0FEBD 
;---------------------------------------- 
;Seconds2iTime 
;v1.0 
;(c) benj9
;in: R0 - time (seconds) 
;out: R0 - iTime 
0FCF300: FEB505210902143141430620F1F758F9 
0FCF310: FEBD 
;---------------------------------------- 
; CanvasDraw 
; R0 - X 
; R1 - Y 
; R2 - Pic 
0FCF320: FFB570BC101CF0F7EFFE40190121401A 
0FCF330: 03B4301CF0F7ECFE0319013B2A1C211C 
0FCF340: F1F722FA381CF0F7EFFE02B0F8BD 
;---------------------------------------- 
; DrawPicWithCanvas 
; R0 - X 
; R1 - Y 
; R2 - Pic 
0FCF350: FFB570BCFFF7E4FF70B407BCF0F7E0FE 
0FCF360: F8BD 
;---------------------------------------- 
; DrawColorPicWithCanvas 
; R0 - X 
; R1 - Y 
; R2 - Pic 
; R3 - * color (color addr) 
; [SP] - * bg color (color addr) 
0FCF370: FFB570BCFFF7D4FF069A08BC04B470B4 
0FCF380: 07BCF0F7D5FE01B0F0BD
;----------------------------------------
;For MP v11
;Process Files
0FCF3A0: 03B5FFB0FFB0011C0CA81ADF0CA950A8
0FCF3B0: 4CAA6BDF002824D00CA950A8A923C35C
0FCF3C0: 5F2B19D083DF0CA86A4601A984DF0198
0FCF3D0: 0004C00F06D10CA80DA117DFFF99FFF7
0FCF3E0: DFFF09E0FF9A002A06D00CA8694611DF
0FCF3F0: 011C0098FF9A904750A84CA96CDF0028
0FCF400: DAD150A84CA96DDF7FB07FB003BDC046
0FCF410: 5C2A00
#pragma disable old_equal_ff 
;locale=Russian_Russia.1251

;------------------------- end -------------------------

