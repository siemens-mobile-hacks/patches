;SL65v53
;Draw Hook
;Draw Hook
;(c) Dimadze
;Version: 1.6
;PatchID: 9900
;Details: https://patches.kibab.com/patches/details.php5?id=9900
/*
Патч, следит за функцией DrawObject(), через которую отрисовывается практически всё на Siemens,
т.е. когда параметр содержит указатель на 5ый объект отрисовки (`IMGHDR+RECT), патч проверяет
на альфа-канал, если его нет (bpnum!=0x0A), то всё отрисовывается стандартным образом, иначе
в дело вступает самописная ф-ия отрисовки, она сделана максимально оптимизированной.
В основе её работы лежит запись битмапа изображения прямо в промежуточный буфер отрисовки,
я назвал его RamScreenPhoneCache (есть аналогичный для Java) c вычислением цвета при альфа - канале.
В итоге на SGold X65 могут отрисовывться 32 битные (24bit+alpha) изображения в эльфах, а также менять
графику используя все 32 бита, а не 8 и 16.
Даже на CX75 видна разница, по стандарту видны "разводы", с патчем изображение рисуется совершенно чётко.
Скорость отрисовки с патчем и без по моим наблюдениям не меняеться.

*/
;PATCH_DRAWOBJECT_TXT
0x01148D88: F0B5051C0C1C F0B579F6D3F8

;PATCH_DRAWOBJECT_IMG
0x0116A894: F0B585B0061C F0B557F633FB

;PATCH_BODY,CODE
#pragma enable old_equal_ff
0x00FC1F00: 85B0061C03B52578052D08D16569AD78
0x00FC1F10: 0A2D03D1011C201C0E4DA84703BD172D
0x00FC1F20: FCD165692D680A2DF8D1011C201C0A4D
0x00FC1F30: A847F3E7051C0F1C03B52678052E07D1
0x00FC1F40: 6669B6780A2E03D1011C201C014EB047
0x00FC1F50: 3C1C03BDCD1FFCA0F920FCA030B50B00
0x00FC1F60: DC78DD780200D006000EFF21091B4843
0x00FC1F70: 997861434018FF2100F0D4F80C06FC20
0x00FC1F80: C0001040C010FF21491B48435978E40E
0x00FC1F90: 69434018FF2100F0C5F80806800E4001
0x00FC1FA0: 2418F82000021040000AFF212A00891A
0x00FC1FB0: 4843197851434018FF2100F0B3F80806
0x00FC1FC0: C00EC00220180004001430BDF2B582B0
0x00FC1FD0: 0400002500E06D1C60694078854200DB
0x00FC1FE0: 87E0002619E002980E23E35E01682800
0x00FC1FF0: 48430C22A25E4B435900029B40009B69
0x00FC2000: 520059188918C9190F18388869460004
0x00FC2010: 0014FFF7A3FF3880361D606901788900
0x00FC2020: 8E42D8DA029B0C21615E7210920F9219
0x00FC2030: 9210891814229A5E8A42EDDB10229A5E
0x00FC2040: 9142E9DB0E21615E16229A5E49198A42
0x00FC2050: E2DB12229A5E9142DEDB017840686943
0x00FC2060: 890071184018C3786846C370002BD3D0
0x00FC2070: 61690A7849686A439200B21889188978
0x00FC2080: 017061690A7849686A439200B2188918
0x00FC2090: 497841706269177852686F43BF00F719
0x00FC20A0: D25DF70FBF1982707F10FF2B9BD1029B
0x00FC20B0: D2081B68890801936B435B0008B480B4
0x00FC20C0: 49010C23E35E51185F00BC460E23E75E
0x00FC20D0: 039B5F43049B7F009B69DB196746DB19
0x00FC20E0: 80BCDB1980BC0078C008C0020818D853
0x00FC20F0: 92E703B0F0BD000000B582B043696A46
0x00FC2100: 5B68137043699B68537043691B685380
0x00FC2110: 4269526901926A464261FFF757FF02B0
0x00FC2120: 00BD00007847C0460C002DE941C0B0E1
0x00FC2130: 001061228CC0A0E140C03CE000006022
0x00FC2140: 0120B0E13100000A0030A0E3200851E1
0x00FC2150: 0118A091200451E10114A091A00051E1
0x00FC2160: 2000008A200151E11C00008AA00151E1
0x00FC2170: 1700008A200251E11200008AA00251E1
0x00FC2180: 0D00008A200351E10800008AA00351E1
0x00FC2190: 0300008A810350E1810340200330A3E0
0x00FC21A0: 010350E1010340200330A3E0810250E1
0x00FC21B0: 810240200330A3E0010250E101024020
0x00FC21C0: 0330A3E0810150E1810140200330A3E0
0x00FC21D0: 010150E1010140200330A3E0810050E1
0x00FC21E0: 810040200330A3E0010050E101004020
0x00FC21F0: 0330A3E0020051E12114A081E4FFFF8A
0x00FC2200: 0310A0E18C3FB0E10010612200006042
0x00FC2210: 0C00BDE81EFF2FE1
#pragma disable old_equal_ff

;------------------------- end -------------------------

